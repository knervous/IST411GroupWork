<?php

/**
 *
 * 
 *
 * Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
 *
 */
 

namespace Java\Lang;

/**
 * (no documentation provided)
 */
class Number
{

    /**
     * Constructs a Number from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this Number
     *
     * @return array
     */
    public function toArray()
    {
        $a = array();
        return $a;
    }

    /**
     * Returns the JSON string for this Number
     *
     * @return string
     */
    public function toJson()
    {
        return json_encode($this->toArray());
    }

    /**
     * Initializes this Number from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonElement
{

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asBigInteger;

    /**
     * (no documentation provided)
     *
     * @var string
     */
    private $asCharacter;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $asBoolean;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asInt;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonArray;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonObject;

    /**
     * (no documentation provided)
     *
     * @var double
     */
    private $asDouble;

    /**
     * (no documentation provided)
     *
     * @var string
     */
    private $asString;

    /**
     * (no documentation provided)
     *
     * @var double
     */
    private $asFloat;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonPrimitive
     */
    private $asJsonPrimitive;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonObject
     */
    private $asJsonObject;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonArray
     */
    private $asJsonArray;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asByte;

    /**
     * (no documentation provided)
     *
     * @var \Java\Lang\Number
     */
    private $asNumber;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonNull;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asLong;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asBigDecimal;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asShort;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonPrimitive;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonNull
     */
    private $asJsonNull;

    /**
     * Constructs a JsonElement from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsBigInteger()
    {
        return $this->asBigInteger;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asBigInteger
     */
    public function setAsBigInteger($asBigInteger)
    {
        $this->asBigInteger = $asBigInteger;
    }
    /**
     * (no documentation provided)
     *
     * @return string
     */
    public function getAsCharacter()
    {
        return $this->asCharacter;
    }

    /**
     * (no documentation provided)
     *
     * @param string $asCharacter
     */
    public function setAsCharacter($asCharacter)
    {
        $this->asCharacter = $asCharacter;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getAsBoolean()
    {
        return $this->asBoolean;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $asBoolean
     */
    public function setAsBoolean($asBoolean)
    {
        $this->asBoolean = $asBoolean;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsInt()
    {
        return $this->asInt;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asInt
     */
    public function setAsInt($asInt)
    {
        $this->asInt = $asInt;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonArray()
    {
        return $this->jsonArray;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonArray
     */
    public function setJsonArray($jsonArray)
    {
        $this->jsonArray = $jsonArray;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonObject()
    {
        return $this->jsonObject;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonObject
     */
    public function setJsonObject($jsonObject)
    {
        $this->jsonObject = $jsonObject;
    }
    /**
     * (no documentation provided)
     *
     * @return double
     */
    public function getAsDouble()
    {
        return $this->asDouble;
    }

    /**
     * (no documentation provided)
     *
     * @param double $asDouble
     */
    public function setAsDouble($asDouble)
    {
        $this->asDouble = $asDouble;
    }
    /**
     * (no documentation provided)
     *
     * @return string
     */
    public function getAsString()
    {
        return $this->asString;
    }

    /**
     * (no documentation provided)
     *
     * @param string $asString
     */
    public function setAsString($asString)
    {
        $this->asString = $asString;
    }
    /**
     * (no documentation provided)
     *
     * @return double
     */
    public function getAsFloat()
    {
        return $this->asFloat;
    }

    /**
     * (no documentation provided)
     *
     * @param double $asFloat
     */
    public function setAsFloat($asFloat)
    {
        $this->asFloat = $asFloat;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonPrimitive
     */
    public function getAsJsonPrimitive()
    {
        return $this->asJsonPrimitive;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonPrimitive $asJsonPrimitive
     */
    public function setAsJsonPrimitive($asJsonPrimitive)
    {
        $this->asJsonPrimitive = $asJsonPrimitive;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonObject
     */
    public function getAsJsonObject()
    {
        return $this->asJsonObject;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonObject $asJsonObject
     */
    public function setAsJsonObject($asJsonObject)
    {
        $this->asJsonObject = $asJsonObject;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonArray
     */
    public function getAsJsonArray()
    {
        return $this->asJsonArray;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonArray $asJsonArray
     */
    public function setAsJsonArray($asJsonArray)
    {
        $this->asJsonArray = $asJsonArray;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsByte()
    {
        return $this->asByte;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asByte
     */
    public function setAsByte($asByte)
    {
        $this->asByte = $asByte;
    }
    /**
     * (no documentation provided)
     *
     * @return \Java\Lang\Number
     */
    public function getAsNumber()
    {
        return $this->asNumber;
    }

    /**
     * (no documentation provided)
     *
     * @param \Java\Lang\Number $asNumber
     */
    public function setAsNumber($asNumber)
    {
        $this->asNumber = $asNumber;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonNull()
    {
        return $this->jsonNull;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonNull
     */
    public function setJsonNull($jsonNull)
    {
        $this->jsonNull = $jsonNull;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsLong()
    {
        return $this->asLong;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asLong
     */
    public function setAsLong($asLong)
    {
        $this->asLong = $asLong;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsBigDecimal()
    {
        return $this->asBigDecimal;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asBigDecimal
     */
    public function setAsBigDecimal($asBigDecimal)
    {
        $this->asBigDecimal = $asBigDecimal;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsShort()
    {
        return $this->asShort;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asShort
     */
    public function setAsShort($asShort)
    {
        $this->asShort = $asShort;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonPrimitive()
    {
        return $this->jsonPrimitive;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonPrimitive
     */
    public function setJsonPrimitive($jsonPrimitive)
    {
        $this->jsonPrimitive = $jsonPrimitive;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonNull
     */
    public function getAsJsonNull()
    {
        return $this->asJsonNull;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonNull $asJsonNull
     */
    public function setAsJsonNull($asJsonNull)
    {
        $this->asJsonNull = $asJsonNull;
    }
    /**
     * Returns the associative array for this JsonElement
     *
     * @return array
     */
    public function toArray()
    {
        $a = array();
        if ($this->asBigInteger) {
            $a["asBigInteger"] = $this->asBigInteger;
        }
        if ($this->asCharacter) {
            $a["asCharacter"] = $this->asCharacter;
        }
        if ($this->asBoolean) {
            $a["asBoolean"] = $this->asBoolean;
        }
        if ($this->asInt) {
            $a["asInt"] = $this->asInt;
        }
        if ($this->jsonArray) {
            $a["jsonArray"] = $this->jsonArray;
        }
        if ($this->jsonObject) {
            $a["jsonObject"] = $this->jsonObject;
        }
        if ($this->asDouble) {
            $a["asDouble"] = $this->asDouble;
        }
        if ($this->asString) {
            $a["asString"] = $this->asString;
        }
        if ($this->asFloat) {
            $a["asFloat"] = $this->asFloat;
        }
        if ($this->asJsonPrimitive) {
            $a["asJsonPrimitive"] = $this->asJsonPrimitive->toArray();
        }
        if ($this->asJsonObject) {
            $a["asJsonObject"] = $this->asJsonObject->toArray();
        }
        if ($this->asJsonArray) {
            $a["asJsonArray"] = $this->asJsonArray->toArray();
        }
        if ($this->asByte) {
            $a["asByte"] = $this->asByte;
        }
        if ($this->asNumber) {
            $a["asNumber"] = $this->asNumber->toArray();
        }
        if ($this->jsonNull) {
            $a["jsonNull"] = $this->jsonNull;
        }
        if ($this->asLong) {
            $a["asLong"] = $this->asLong;
        }
        if ($this->asBigDecimal) {
            $a["asBigDecimal"] = $this->asBigDecimal;
        }
        if ($this->asShort) {
            $a["asShort"] = $this->asShort;
        }
        if ($this->jsonPrimitive) {
            $a["jsonPrimitive"] = $this->jsonPrimitive;
        }
        if ($this->asJsonNull) {
            $a["asJsonNull"] = $this->asJsonNull->toArray();
        }
        return $a;
    }

    /**
     * Returns the JSON string for this JsonElement
     *
     * @return string
     */
    public function toJson()
    {
        return json_encode($this->toArray());
    }

    /**
     * Initializes this JsonElement from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        if (isset($o['asBigInteger'])) {
            $this->asBigInteger = $o["asBigInteger"];
        }
        if (isset($o['asCharacter'])) {
            $this->asCharacter = $o["asCharacter"];
        }
        if (isset($o['asBoolean'])) {
            $this->asBoolean = $o["asBoolean"];
        }
        if (isset($o['asInt'])) {
            $this->asInt = $o["asInt"];
        }
        if (isset($o['jsonArray'])) {
            $this->jsonArray = $o["jsonArray"];
        }
        if (isset($o['jsonObject'])) {
            $this->jsonObject = $o["jsonObject"];
        }
        if (isset($o['asDouble'])) {
            $this->asDouble = $o["asDouble"];
        }
        if (isset($o['asString'])) {
            $this->asString = $o["asString"];
        }
        if (isset($o['asFloat'])) {
            $this->asFloat = $o["asFloat"];
        }
        if (isset($o['asJsonPrimitive'])) {
            $this->asJsonPrimitive = new \Com\Google\Gson\JsonPrimitive($o["asJsonPrimitive"]);
        }
        if (isset($o['asJsonObject'])) {
            $this->asJsonObject = new \Com\Google\Gson\JsonObject($o["asJsonObject"]);
        }
        if (isset($o['asJsonArray'])) {
            $this->asJsonArray = new \Com\Google\Gson\JsonArray($o["asJsonArray"]);
        }
        if (isset($o['asByte'])) {
            $this->asByte = $o["asByte"];
        }
        if (isset($o['asNumber'])) {
            $this->asNumber = new \Java\Lang\Number($o["asNumber"]);
        }
        if (isset($o['jsonNull'])) {
            $this->jsonNull = $o["jsonNull"];
        }
        if (isset($o['asLong'])) {
            $this->asLong = $o["asLong"];
        }
        if (isset($o['asBigDecimal'])) {
            $this->asBigDecimal = $o["asBigDecimal"];
        }
        if (isset($o['asShort'])) {
            $this->asShort = $o["asShort"];
        }
        if (isset($o['jsonPrimitive'])) {
            $this->jsonPrimitive = $o["jsonPrimitive"];
        }
        if (isset($o['asJsonNull'])) {
            $this->asJsonNull = new \Com\Google\Gson\JsonNull($o["asJsonNull"]);
        }
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonPrimitive extends \Com\Google\Gson\JsonElement
{

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $boolean;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $number;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $string;

    /**
     * Constructs a JsonPrimitive from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getBoolean()
    {
        return $this->boolean;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $boolean
     */
    public function setBoolean($boolean)
    {
        $this->boolean = $boolean;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $number
     */
    public function setNumber($number)
    {
        $this->number = $number;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getString()
    {
        return $this->string;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $string
     */
    public function setString($string)
    {
        $this->string = $string;
    }
    /**
     * Returns the associative array for this JsonPrimitive
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        if ($this->boolean) {
            $a["boolean"] = $this->boolean;
        }
        if ($this->number) {
            $a["number"] = $this->number;
        }
        if ($this->string) {
            $a["string"] = $this->string;
        }
        return $a;
    }


    /**
     * Initializes this JsonPrimitive from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
        if (isset($o['boolean'])) {
            $this->boolean = $o["boolean"];
        }
        if (isset($o['number'])) {
            $this->number = $o["number"];
        }
        if (isset($o['string'])) {
            $this->string = $o["string"];
        }
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonNull extends \Com\Google\Gson\JsonElement
{

    /**
     * Constructs a JsonNull from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this JsonNull
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        return $a;
    }


    /**
     * Initializes this JsonNull from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonArray extends \Com\Google\Gson\JsonElement
{

    /**
     * Constructs a JsonArray from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this JsonArray
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        return $a;
    }


    /**
     * Initializes this JsonArray from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonObject extends \Com\Google\Gson\JsonElement
{

    /**
     * Constructs a JsonObject from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this JsonObject
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        return $a;
    }


    /**
     * Initializes this JsonObject from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonElement
{

    /**
     * (no documentation provided)
     *
     * @var string
     */
    private $asString;

    /**
     * (no documentation provided)
     *
     * @var double
     */
    private $asDouble;

    /**
     * (no documentation provided)
     *
     * @var double
     */
    private $asFloat;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonNull
     */
    private $asJsonNull;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonPrimitive;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $asBoolean;

    /**
     * (no documentation provided)
     *
     * @var \Java\Lang\Number
     */
    private $asNumber;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonArray
     */
    private $asJsonArray;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asLong;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonNull;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonPrimitive
     */
    private $asJsonPrimitive;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asInt;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asByte;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asBigDecimal;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asShort;

    /**
     * (no documentation provided)
     *
     * @var integer
     */
    private $asBigInteger;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonArray;

    /**
     * (no documentation provided)
     *
     * @var \Com\Google\Gson\JsonObject
     */
    private $asJsonObject;

    /**
     * (no documentation provided)
     *
     * @var string
     */
    private $asCharacter;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $jsonObject;

    /**
     * Constructs a JsonElement from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * (no documentation provided)
     *
     * @return string
     */
    public function getAsString()
    {
        return $this->asString;
    }

    /**
     * (no documentation provided)
     *
     * @param string $asString
     */
    public function setAsString($asString)
    {
        $this->asString = $asString;
    }
    /**
     * (no documentation provided)
     *
     * @return double
     */
    public function getAsDouble()
    {
        return $this->asDouble;
    }

    /**
     * (no documentation provided)
     *
     * @param double $asDouble
     */
    public function setAsDouble($asDouble)
    {
        $this->asDouble = $asDouble;
    }
    /**
     * (no documentation provided)
     *
     * @return double
     */
    public function getAsFloat()
    {
        return $this->asFloat;
    }

    /**
     * (no documentation provided)
     *
     * @param double $asFloat
     */
    public function setAsFloat($asFloat)
    {
        $this->asFloat = $asFloat;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonNull
     */
    public function getAsJsonNull()
    {
        return $this->asJsonNull;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonNull $asJsonNull
     */
    public function setAsJsonNull($asJsonNull)
    {
        $this->asJsonNull = $asJsonNull;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonPrimitive()
    {
        return $this->jsonPrimitive;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonPrimitive
     */
    public function setJsonPrimitive($jsonPrimitive)
    {
        $this->jsonPrimitive = $jsonPrimitive;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getAsBoolean()
    {
        return $this->asBoolean;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $asBoolean
     */
    public function setAsBoolean($asBoolean)
    {
        $this->asBoolean = $asBoolean;
    }
    /**
     * (no documentation provided)
     *
     * @return \Java\Lang\Number
     */
    public function getAsNumber()
    {
        return $this->asNumber;
    }

    /**
     * (no documentation provided)
     *
     * @param \Java\Lang\Number $asNumber
     */
    public function setAsNumber($asNumber)
    {
        $this->asNumber = $asNumber;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonArray
     */
    public function getAsJsonArray()
    {
        return $this->asJsonArray;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonArray $asJsonArray
     */
    public function setAsJsonArray($asJsonArray)
    {
        $this->asJsonArray = $asJsonArray;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsLong()
    {
        return $this->asLong;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asLong
     */
    public function setAsLong($asLong)
    {
        $this->asLong = $asLong;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonNull()
    {
        return $this->jsonNull;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonNull
     */
    public function setJsonNull($jsonNull)
    {
        $this->jsonNull = $jsonNull;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonPrimitive
     */
    public function getAsJsonPrimitive()
    {
        return $this->asJsonPrimitive;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonPrimitive $asJsonPrimitive
     */
    public function setAsJsonPrimitive($asJsonPrimitive)
    {
        $this->asJsonPrimitive = $asJsonPrimitive;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsInt()
    {
        return $this->asInt;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asInt
     */
    public function setAsInt($asInt)
    {
        $this->asInt = $asInt;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsByte()
    {
        return $this->asByte;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asByte
     */
    public function setAsByte($asByte)
    {
        $this->asByte = $asByte;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsBigDecimal()
    {
        return $this->asBigDecimal;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asBigDecimal
     */
    public function setAsBigDecimal($asBigDecimal)
    {
        $this->asBigDecimal = $asBigDecimal;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsShort()
    {
        return $this->asShort;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asShort
     */
    public function setAsShort($asShort)
    {
        $this->asShort = $asShort;
    }
    /**
     * (no documentation provided)
     *
     * @return integer
     */
    public function getAsBigInteger()
    {
        return $this->asBigInteger;
    }

    /**
     * (no documentation provided)
     *
     * @param integer $asBigInteger
     */
    public function setAsBigInteger($asBigInteger)
    {
        $this->asBigInteger = $asBigInteger;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonArray()
    {
        return $this->jsonArray;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonArray
     */
    public function setJsonArray($jsonArray)
    {
        $this->jsonArray = $jsonArray;
    }
    /**
     * (no documentation provided)
     *
     * @return \Com\Google\Gson\JsonObject
     */
    public function getAsJsonObject()
    {
        return $this->asJsonObject;
    }

    /**
     * (no documentation provided)
     *
     * @param \Com\Google\Gson\JsonObject $asJsonObject
     */
    public function setAsJsonObject($asJsonObject)
    {
        $this->asJsonObject = $asJsonObject;
    }
    /**
     * (no documentation provided)
     *
     * @return string
     */
    public function getAsCharacter()
    {
        return $this->asCharacter;
    }

    /**
     * (no documentation provided)
     *
     * @param string $asCharacter
     */
    public function setAsCharacter($asCharacter)
    {
        $this->asCharacter = $asCharacter;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getJsonObject()
    {
        return $this->jsonObject;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $jsonObject
     */
    public function setJsonObject($jsonObject)
    {
        $this->jsonObject = $jsonObject;
    }
    /**
     * Returns the associative array for this JsonElement
     *
     * @return array
     */
    public function toArray()
    {
        $a = array();
        if ($this->asString) {
            $a["asString"] = $this->asString;
        }
        if ($this->asDouble) {
            $a["asDouble"] = $this->asDouble;
        }
        if ($this->asFloat) {
            $a["asFloat"] = $this->asFloat;
        }
        if ($this->asJsonNull) {
            $a["asJsonNull"] = $this->asJsonNull->toArray();
        }
        if ($this->jsonPrimitive) {
            $a["jsonPrimitive"] = $this->jsonPrimitive;
        }
        if ($this->asBoolean) {
            $a["asBoolean"] = $this->asBoolean;
        }
        if ($this->asNumber) {
            $a["asNumber"] = $this->asNumber->toArray();
        }
        if ($this->asJsonArray) {
            $a["asJsonArray"] = $this->asJsonArray->toArray();
        }
        if ($this->asLong) {
            $a["asLong"] = $this->asLong;
        }
        if ($this->jsonNull) {
            $a["jsonNull"] = $this->jsonNull;
        }
        if ($this->asJsonPrimitive) {
            $a["asJsonPrimitive"] = $this->asJsonPrimitive->toArray();
        }
        if ($this->asInt) {
            $a["asInt"] = $this->asInt;
        }
        if ($this->asByte) {
            $a["asByte"] = $this->asByte;
        }
        if ($this->asBigDecimal) {
            $a["asBigDecimal"] = $this->asBigDecimal;
        }
        if ($this->asShort) {
            $a["asShort"] = $this->asShort;
        }
        if ($this->asBigInteger) {
            $a["asBigInteger"] = $this->asBigInteger;
        }
        if ($this->jsonArray) {
            $a["jsonArray"] = $this->jsonArray;
        }
        if ($this->asJsonObject) {
            $a["asJsonObject"] = $this->asJsonObject->toArray();
        }
        if ($this->asCharacter) {
            $a["asCharacter"] = $this->asCharacter;
        }
        if ($this->jsonObject) {
            $a["jsonObject"] = $this->jsonObject;
        }
        return $a;
    }

    /**
     * Returns the JSON string for this JsonElement
     *
     * @return string
     */
    public function toJson()
    {
        return json_encode($this->toArray());
    }

    /**
     * Initializes this JsonElement from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        if (isset($o['asString'])) {
            $this->asString = $o["asString"];
        }
        if (isset($o['asDouble'])) {
            $this->asDouble = $o["asDouble"];
        }
        if (isset($o['asFloat'])) {
            $this->asFloat = $o["asFloat"];
        }
        if (isset($o['asJsonNull'])) {
            $this->asJsonNull = new \Com\Google\Gson\JsonNull($o["asJsonNull"]);
        }
        if (isset($o['jsonPrimitive'])) {
            $this->jsonPrimitive = $o["jsonPrimitive"];
        }
        if (isset($o['asBoolean'])) {
            $this->asBoolean = $o["asBoolean"];
        }
        if (isset($o['asNumber'])) {
            $this->asNumber = new \Java\Lang\Number($o["asNumber"]);
        }
        if (isset($o['asJsonArray'])) {
            $this->asJsonArray = new \Com\Google\Gson\JsonArray($o["asJsonArray"]);
        }
        if (isset($o['asLong'])) {
            $this->asLong = $o["asLong"];
        }
        if (isset($o['jsonNull'])) {
            $this->jsonNull = $o["jsonNull"];
        }
        if (isset($o['asJsonPrimitive'])) {
            $this->asJsonPrimitive = new \Com\Google\Gson\JsonPrimitive($o["asJsonPrimitive"]);
        }
        if (isset($o['asInt'])) {
            $this->asInt = $o["asInt"];
        }
        if (isset($o['asByte'])) {
            $this->asByte = $o["asByte"];
        }
        if (isset($o['asBigDecimal'])) {
            $this->asBigDecimal = $o["asBigDecimal"];
        }
        if (isset($o['asShort'])) {
            $this->asShort = $o["asShort"];
        }
        if (isset($o['asBigInteger'])) {
            $this->asBigInteger = $o["asBigInteger"];
        }
        if (isset($o['jsonArray'])) {
            $this->jsonArray = $o["jsonArray"];
        }
        if (isset($o['asJsonObject'])) {
            $this->asJsonObject = new \Com\Google\Gson\JsonObject($o["asJsonObject"]);
        }
        if (isset($o['asCharacter'])) {
            $this->asCharacter = $o["asCharacter"];
        }
        if (isset($o['jsonObject'])) {
            $this->jsonObject = $o["jsonObject"];
        }
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonObject extends \Com\Google\Gson\JsonElement
{

    /**
     * Constructs a JsonObject from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this JsonObject
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        return $a;
    }


    /**
     * Initializes this JsonObject from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonArray extends \Com\Google\Gson\JsonElement
{

    /**
     * Constructs a JsonArray from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this JsonArray
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        return $a;
    }


    /**
     * Initializes this JsonArray from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonNull extends \Com\Google\Gson\JsonElement
{

    /**
     * Constructs a JsonNull from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this JsonNull
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        return $a;
    }


    /**
     * Initializes this JsonNull from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
    }
}

namespace Com\Google\Gson;

/**
 * (no documentation provided)
 */
class JsonPrimitive extends \Com\Google\Gson\JsonElement
{

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $string;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $number;

    /**
     * (no documentation provided)
     *
     * @var boolean
     */
    private $boolean;

    /**
     * Constructs a JsonPrimitive from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getString()
    {
        return $this->string;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $string
     */
    public function setString($string)
    {
        $this->string = $string;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $number
     */
    public function setNumber($number)
    {
        $this->number = $number;
    }
    /**
     * (no documentation provided)
     *
     * @return boolean
     */
    public function getBoolean()
    {
        return $this->boolean;
    }

    /**
     * (no documentation provided)
     *
     * @param boolean $boolean
     */
    public function setBoolean($boolean)
    {
        $this->boolean = $boolean;
    }
    /**
     * Returns the associative array for this JsonPrimitive
     *
     * @return array
     */
    public function toArray()
    {
        $a = parent::toArray();
        if ($this->string) {
            $a["string"] = $this->string;
        }
        if ($this->number) {
            $a["number"] = $this->number;
        }
        if ($this->boolean) {
            $a["boolean"] = $this->boolean;
        }
        return $a;
    }


    /**
     * Initializes this JsonPrimitive from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
        parent::initFromArray($o);
        if (isset($o['string'])) {
            $this->string = $o["string"];
        }
        if (isset($o['number'])) {
            $this->number = $o["number"];
        }
        if (isset($o['boolean'])) {
            $this->boolean = $o["boolean"];
        }
    }
}

namespace Java\Lang;

/**
 * (no documentation provided)
 */
class Number
{

    /**
     * Constructs a Number from a (parsed) JSON hash
     *
     * @param mixed $o JSON array.
     */
    public function __construct($o = null)
    {
        $this->initFromArray($o);
    }

    /**
     * Returns the associative array for this Number
     *
     * @return array
     */
    public function toArray()
    {
        $a = array();
        return $a;
    }

    /**
     * Returns the JSON string for this Number
     *
     * @return string
     */
    public function toJson()
    {
        return json_encode($this->toArray());
    }

    /**
     * Initializes this Number from an associative array
     *
     * @param array $o
     */
    public function initFromArray($o)
    {
    }
}
